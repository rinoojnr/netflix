{"ast":null,"code":"var _jsxFileName = \"/home/aswin/netflix/src/Components/RowPost/RowPost.js\",\n  _s = $RefreshSig$();\nimport axios from '../../axios';\nimport React from 'react';\nimport { useEffect } from 'react';\nimport \"./RowPost.css\";\nimport { backImage } from '../../constants/constants';\nimport { useState } from 'react';\nimport YouTube from 'react-youtube';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction RowPost(props) {\n  _s();\n  const [movies, setmovies] = useState([]);\n  useEffect(() => {\n    axios.get(props.url).then(response => {\n      console.log(response.data);\n      setmovies(response.data.results);\n      // }).catch(err=>{\n      //   alert('Network Error')\n    });\n  });\n  //  const opts = {\n  //   height: '390',\n  //   width: '100%',\n  //   playerVars: {\n  //     // https://developers.google.com/youtube/player_parameters\n  //     autoplay: 0,\n  //   },\n  // }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"row\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: props.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"posters\",\n      children: movies.map(obj =>\n      /*#__PURE__*/\n      // eslint-disable-next-line jsx-a11y/alt-text\n      _jsxDEV(\"img\", {\n        className: props.isSmall ? 'smallPosters' : 'poster',\n        src: `${backImage + obj.backdrop_path}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(YouTube, {\n      opts: opts,\n      videoId: \"2g811Eo7K8U\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n}\n_s(RowPost, \"MAdrXVcd66oyPMrmkShA7uyB4/U=\");\n_c = RowPost;\nexport default RowPost;\nvar _c;\n$RefreshReg$(_c, \"RowPost\");","map":{"version":3,"names":["axios","React","useEffect","backImage","useState","YouTube","jsxDEV","_jsxDEV","RowPost","props","_s","movies","setmovies","get","url","then","response","console","log","data","results","className","children","title","fileName","_jsxFileName","lineNumber","columnNumber","map","obj","isSmall","src","backdrop_path","opts","videoId","_c","$RefreshReg$"],"sources":["/home/aswin/netflix/src/Components/RowPost/RowPost.js"],"sourcesContent":["import axios from '../../axios'\nimport React from 'react'\nimport { useEffect } from 'react'\nimport \"./RowPost.css\"\nimport {backImage} from '../../constants/constants'\nimport { useState } from 'react'\nimport YouTube from 'react-youtube'\n\nfunction RowPost(props) {\n  const [movies, setmovies] = useState([])\n  useEffect(() => {\n    axios.get(props.url).then((response)=>{\n      console.log(response.data);\n      setmovies(response.data.results)\n    // }).catch(err=>{\n    //   alert('Network Error')\n\n    })\n    \n    }\n   )\n  //  const opts = {\n  //   height: '390',\n  //   width: '100%',\n  //   playerVars: {\n  //     // https://developers.google.com/youtube/player_parameters\n  //     autoplay: 0,\n  //   },\n  // }\n  \n  return (\n    <div className='row'>\n        <h2>{props.title}</h2>\n        <div className='posters'>\n          {movies.map((obj)=>\n          // eslint-disable-next-line jsx-a11y/alt-text\n          <img className={props.isSmall ? 'smallPosters' : 'poster' }src={`${backImage+obj.backdrop_path}`}/>\n         \n          )\n          }\n            \n        </div>\n          <YouTube opts={opts} videoId=\"2g811Eo7K8U\"/>\n    </div>\n  )\n}\n\nexport default RowPost\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,aAAa;AAC/B,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,SAAS,QAAQ,OAAO;AACjC,OAAO,eAAe;AACtB,SAAQC,SAAS,QAAO,2BAA2B;AACnD,SAASC,QAAQ,QAAQ,OAAO;AAChC,OAAOC,OAAO,MAAM,eAAe;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEnC,SAASC,OAAOA,CAACC,KAAK,EAAE;EAAAC,EAAA;EACtB,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EACxCF,SAAS,CAAC,MAAM;IACdF,KAAK,CAACa,GAAG,CAACJ,KAAK,CAACK,GAAG,CAAC,CAACC,IAAI,CAAEC,QAAQ,IAAG;MACpCC,OAAO,CAACC,GAAG,CAACF,QAAQ,CAACG,IAAI,CAAC;MAC1BP,SAAS,CAACI,QAAQ,CAACG,IAAI,CAACC,OAAO,CAAC;MAClC;MACA;IAEA,CAAC,CAAC;EAEF,CAAC,CACD;EACF;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA,oBACEb,OAAA;IAAKc,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAChBf,OAAA;MAAAe,QAAA,EAAKb,KAAK,CAACc;IAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAM,eACtBpB,OAAA;MAAKc,SAAS,EAAC,SAAS;MAAAC,QAAA,EACrBX,MAAM,CAACiB,GAAG,CAAEC,GAAG;MAAA;MAChB;MACAtB,OAAA;QAAKc,SAAS,EAAEZ,KAAK,CAACqB,OAAO,GAAG,cAAc,GAAG,QAAU;QAAAC,GAAG,EAAG,GAAE5B,SAAS,GAAC0B,GAAG,CAACG,aAAc;MAAE;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAE;IAElG;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAGG,eACJpB,OAAA,CAACF,OAAO;MAAC4B,IAAI,EAAEA,IAAK;MAACC,OAAO,EAAC;IAAa;MAAAV,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAE;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAC5C;AAEV;AAACjB,EAAA,CArCQF,OAAO;AAAA2B,EAAA,GAAP3B,OAAO;AAuChB,eAAeA,OAAO;AAAA,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}